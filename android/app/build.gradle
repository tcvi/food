plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.vi.fl.ad.food_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 22
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    // 1
    flavorDimensions "env"

    // 2
    productFlavors {
        // 3
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "[DEV] VTit"
            versionCode 3
            versionName "2.0.1"
            flutter.target "lib/main_dev.dart"
        }
        // 4
        prod {
            dimension "env"
            resValue "string", "app_name", "VTit"
            versionCode 1
            versionName "1.0.0"
            flutter.target "lib/main_prod.dart"
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
        // add the code from below line.
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                // Define your app name
                def appName = 'VTit'
                // Get the current date and format it
                def formattedDate = new Date().format('yyMMddHHmm')
                // Create a new name for the APK
                def newName = output.outputFileName
                // Replace "app-" with your app name
                newName = newName.replace("app-", "${appName}-")
                // Replace "-release" with "-release-" and the formatted date
                newName = newName.replace("-${variant.buildType.name}", "-${variant.buildType.name}-${formattedDate}")
                // Set the new output file name
                output.outputFileName = newName
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
}
